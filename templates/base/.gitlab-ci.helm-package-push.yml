variables:
  REGISTRY: europe-west1-docker.pkg.dev
  REGISTRY_PATH: sk5-internal-exploit/helm
  # renovate: datasource=github-releases depName=helm/helm
  HELM_VERSION: "v3.12.0"

helm_package_push:
  stage: build
  image:
    name: google/cloud-sdk:alpine
  before_script:
    - curl https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar -xzvf - linux-amd64/helm --strip-components 1 -C /bin/
    - echo "${SA_B64}" | base64 -d > ${HOME}/sa.json
    - gcloud auth activate-service-account --key-file=${HOME}/sa.json
    - gcloud auth print-access-token | helm registry login -u oauth2accesstoken --password-stdin https://${REGISTRY}
    - echo "Helm chart ${CI_PROJECT_NAME}-${CI_COMMIT_TAG} will be push on oci://${REGISTRY}/${REGISTRY_PATH}"
    - CURRENT_RELEASE=$(cat .CURRENT_RELEASE) || true
    - NEXT_RELEASE=$(cat .NEXT_RELEASE) || true
    - echo "Current release version is $CURRENT_RELEASE. The next release version will be $NEXT_RELEASE."
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"'
  script:
    - |
      echo "CI commit branch is $CI_COMMIT_BRANCH."
      if [ "$CURRENT_RELEASE" != "$NEXT_RELEASE" ] && [ -n "$NEXT_RELEASE" ]; then
        helm package ${CI_PROJECT_NAME} --version ${NEXT_RELEASE}
        helm push ${CI_PROJECT_NAME}-${NEXT_RELEASE}.tgz oci://${REGISTRY}/${REGISTRY_PATH}
      fi
