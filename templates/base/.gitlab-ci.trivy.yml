---
# Based on https://aquasecurity.github.io/trivy/v0.43/tutorials/integrations/gitlab-ci/
trivy:
  stage: quality
  image: 
    name: gcr.io/kaniko-project/executor:v1.12.1-debug
    entrypoint: [""]
  variables:
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
  before_script:
    |
    export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/') && echo $TRIVY_VERSION
    wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
    if [ ! -f "trivy.yaml" ]; then
      echo "Trivy config file NOT found, create one"
      cat > trivy.yaml << EOF
      security-checks:
        - vuln
        - config
        - secret
      vulnerability:
        type:
          - os
          - library
        ignore-unfixed: true
      exit-code: 1
      severity:
        - UNKNOWN
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    EOF
    else
      echo "Trivy config file found, let's use it"
    fi
  script:
    |
    echo "Here is the config used by trivy"
    cat trivy.yaml
    # Build image
    /kaniko/executor \
        --context ${CI_PROJECT_DIR} \
        --dockerfile ${CI_PROJECT_DIR}/${DOCKERFILE_NAME:-Dockerfile} \
        --no-push \
        --destination skale5/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA} \
        --tar-path image.tar
    # Print report
    ./trivy image --config trivy.yaml --input image.tar